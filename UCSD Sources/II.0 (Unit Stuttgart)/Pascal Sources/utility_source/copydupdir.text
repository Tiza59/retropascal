PROGRAM DUPLICATEDIRECTORYCOPIER;

  (*)  This utility will copy the duplicate directory  (*)
  (*)  in blocks 6 - 9 into the standard directory in  (*)
  (*)  blocks 2 - 5. It will also mark DLASTBLK as 10  (*)
  (*)  so as to maintain the duplicate directory.      (*)


  CONST
	DIRBLOX = 4; {size of a directory in blocks}
	BLOCKBYTES = 511; {size of a block in bytes minus 1}
        
	FIRSTIDCHAR = 7; {location of first character in volume id}
	MAXIDLENGTH = 7;

	DUPDIRLASTBLK = 10;

  VAR
       UNITID : STRING[1];
       DRIVENUM : INTEGER;
       BUFFER : PACKED ARRAY [ 1 .. DIRBLOX, 0 .. BLOCKBYTES ] OF CHAR;
       IDLENGTH, N : INTEGER;

FUNCTION  YES: BOOLEAN;
  VAR  CH : CHAR;
BEGIN
  UNITREAD( 1, CH, 1, 0, 0 );
  WRITELN;
  YES := (CH = 'Y');
END; 

BEGIN { of Duplicate Directory Copier }

  PAGE(OUTPUT);
  WRITELN;
  WRITELN( 'Duplicate Directory Copier { July 12, 1978 } ' );
  WRITELN;

  REPEAT
    WRITE( '  Enter drive # of user''s disk [4 or 5]: ' );
    READLN( UNITID );
    IF LENGTH( UNITID ) > 0 THEN
      DRIVENUM := ORD( UNITID[1] ) - ORD('0')
    ELSE
      EXIT( PROGRAM );
  UNTIL DRIVENUM IN [4,5];

  UNITREAD( DRIVENUM, BUFFER, SIZEOF(BUFFER), 6, 0 );
  IDLENGTH := ORD( BUFFER[ 1, 6 ] );

  IF (IDLENGTH > MAXIDLENGTH) OR (IDLENGTH <= 0) THEN
    WRITE( 'Illegal volume name. Do you want to copy anyway? ' )

  ELSE
  BEGIN
    WRITE( 'Are you sure you want to zap the directory of ' );
    FOR N := FIRSTIDCHAR TO (FIRSTIDCHAR - 1 + IDLENGTH) DO
      WRITE( BUFFER[ 1, N ] );
    WRITE( ': {blocks 2-5}? ' );
  END;

  IF YES THEN
  BEGIN
    IF ORD( BUFFER[ 1, 2 ] ) <> DUPDIRLASTBLK THEN 
    BEGIN
      WRITELN( 'A duplicate directory has not been maintained on this disk. ' );
      WRITE( '  Are you sure you want to copy the directory? ' );
      IF NOT YES THEN
	EXIT( PROGRAM )
      ELSE
      BEGIN
	BUFFER[ 1, 2 ] := CHR( DUPDIRLASTBLK );
	BUFFER[ 1, 3 ] := CHR(0);
	UNITWRITE( DRIVENUM, BUFFER, SIZEOF(BUFFER), 6, 0 );
      END;
    END;
    UNITWRITE( DRIVENUM, BUFFER, SIZEOF(BUFFER), 2, 0 );
    WRITE( '  Directory copy is complete. ' );
  END
  ELSE
    WRITE( '  Directory copy aborted. ' );
  
  WRITE( 'Type <ret> to exit. ' );
  READLN;

END.

