 1 ) ,
1 ) * ( 1 in ID ( 1
.. 1 => 1 ) , 1 ) ** (
1 and 1 and 1 ,
1 ) ) ; use ID ( ID ' ( 1
, 1 ) ) ( 1 or 1 or
1 , ID ( 1 xor 1 xor
1 ) range ( 1 and then 1 and
then 1 , 1 ) + ( 1 or else
1 or else 1 , 1 ) *
1 .. 1 => 1 ) ; procedure
ID is ID : ID ; for ID use
1 ; procedure ID ( ID : ID ) is
begin null ; end ; generic package ID is ID : constant
ID ; use ID ; ID : constant array ( ID
range <> ) of ID := 1 ; end ; begin accept
ID ; << ID >> if 1 then pragma
ID ; ID := 1 ; elsif 1
then exit ; return ; end if ; exception when ID => return
1 ; goto ID ; end ID ;
pragma ID ( 1 , 1 ) ; procedure
ID ;
pragma ID ( ID => 1 ) ; procedure
ID ;
package ID is end ;
package body ID is end ;
separate ( ID ) package body ID is end ;
generic procedure ID ;
procedure ID is new ID ;
function ID is new ID ;
function ID return ID ;
procedure ID ( ID : ID ) ;
procedure ID ( ID : ID ; ID :
ID ) ;
procedure ID ( ID , ID : ID ) ;
procedure ID ( ID : in ID ) ;
procedure ID ( ID : out ID ) ;
procedure ID ( ID : in out ID ) ;
procedure ID ( ID , ID , ID :
ID ) ;
function "**" return ID ;
generic ID : ID ; procedure ID ;
generic type ID is private ; procedure ID ;
generic with procedure ID ; procedure ID ;
generic with procedure ID is ID ; procedure ID
;
generic with procedure ID is <> ; procedure ID ;
generic type ID ( ID : ID ) is private ;
procedure ID ;
generic type ID ( ID : ID ; ID :
ID ) is private ; procedure ID ;
generic type ID ( ID , ID : ID ) is
private ; procedure ID ;
generic type ID is ( <> ) ; procedure ID ;
generic type ID is range <> ; procedure ID ;
generic type ID is delta <> ; procedure ID ;
generic type ID is digits <> ; procedure ID ;
generic type ID is array ( ID ) of ID ;
procedure ID ;
generic type ID is access ID ; procedure ID ;
generic type ID is array ( ID range <> , ID
range <> ) of ID ; procedure ID ;
generic type ID is array ( ID , ID ) of
ID ; procedure ID ;
generic type ID is array ( 1 .. 1
) of ID ; procedure ID ;
generic type ID is limited private ; procedure ID ;
generic with function ID return ID is ID ;
procedure ID ;
procedure ID is for ID use 1 ; begin
null ; end ;
procedure ID is procedure ID is separate ; begin null
; end ;
procedure ID is ID , ID : constant ID
; begin null ; end ;
procedure ID is ID , ID : constant array (
ID ) of ID ; begin null ; end ;
procedure ID is ID : constant := 1 ;
begin null ; end ;
procedure ID is ID , ID : constant :=
1 ; begin null ; end ;
procedure ID is type ID is private ; begin null ; end
;
procedure ID is type ID ; begin null ; end ;
procedure ID is subtype ID is ID ; begin null
; end ;
procedure ID is procedure ID ; begin null ; end ;
procedure ID is package ID is end ; begin null ; end ;
procedure ID is task ID ; begin null ; end ;
procedure ID is ID : exception ; begin null ; end ;
procedure ID is ID , ID : exception ; begin
null ; end ;
procedure ID is ID : ID renames ID ;
begin null ; end ;
procedure ID is ID : exception renames ID ;
begin null ; end ;
procedure ID is package ID renames ID ; begin
null ; end ;
procedure ID is task ID renames ID ; begin
null ; end ;
procedure ID is procedure ID renames ID ;
begin null ; end ;
procedure ID is pragma ID ; begin null ; end ;
procedure ID is ID : array ( ID ) of
ID ; begin null ; end ;
procedure ID is ID , ID : array ( ID )
of ID ; begin null ; end ;
procedure ID is type ID is ( ID ) ; begin null
; end ;
procedure ID is type ID is range 1 ..
1 ; begin null ; end ;
procedure ID is type ID is digits 1 ;
begin null ; end ;
procedure ID is type ID is array ( ID ) of
ID ; begin null ; end ;
procedure ID is type ID is record end record ; begin
null ; end ;
procedure ID is type ID is access ID ; begin
null ; end ;
procedure ID is type ID is new ID ; begin null
; end ;
procedure ID is type ID is ( ID , ID )
; begin null ; end ;
procedure ID is type ID is ( 'A' ) ;
begin null ; end ;
procedure ID is type ID is record null ; end record ;
begin null ; end ;
procedure ID is type ID is record ID :
ID ; end record ; begin null ; end ;
procedure ID is type ID is record case ID is
end case ; end record ; begin null ; end ;
procedure ID is type ID is record case ID is
when 1 => end case ; end record ; begin null ; end ;
procedure ID is package ID is new ID ; begin
null ; end ;
procedure ID is package ID is private end ; begin null
; end ;
procedure ID is package ID is private for ID
use 1 ; end ; begin null ; end ;
procedure ID is package ID is private for ID
use record end record ; end ; begin null ; end ;
procedure ID is package ID is private for ID
use at 1 ; end ; begin null ; end ;
procedure ID is package ID is private for ID
use record at mod 1 ; end record ; end ; begin null ;
end ;
procedure ID is package ID is private for ID
use record ID at 1 range 1 ..
1 ; end record ; end ; begin null ; end ;
procedure ID is package ID is private for ID
use 1 ; pragma ID ; end ; begin null ; end ;
procedure ID is package ID is private for ID
use 1 ; for ID use 1 ; end ; begin
null ; end ;
procedure ID is package ID is end ID ; begin
null ; end ;
procedure ID is task type ID ; begin null ; end ;
procedure ID is task ID is end ; begin null ; end ;
procedure ID is task ID is entry ID ; end ;
begin null ; end ;
procedure ID is task ID is entry ID (
ID ) ; end ; begin null ; end ;
procedure ID is for ID use 1 ; task
ID ; begin null ; end ;
procedure ID is for ID use 1 ; procedure
ID is separate ; begin null ; end ;
procedure ID is for ID use 1 ; task body
ID is begin null ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin null ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin ID ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin delay 1 ; end ; begin null ;
end ;
procedure ID is for ID use 1 ; package
body ID is begin abort ID ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin raise ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin ID ' ( 1 ) ; end ;
begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin exit ID ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin exit when 1 ; end ; begin null
; end ;
procedure ID is for ID use 1 ; package
body ID is begin case 1 is end case ; end ;
begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin loop null ; end loop ; end ; begin null ; end
;
procedure ID is for ID use 1 ; package
body ID is begin ID : loop null ; end loop ID
; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin begin null ; end ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin ID : begin null ; end ID ;
end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select terminate ; end select ; end ; begin
null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select ID ; else null ; end select ;
end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select ID ; or delay 1
; end select ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin if 1 then null ; else null ;
end if ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin case 1 is when 1
=> null ; end case ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin for ID in ID loop null ; end
loop ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin for ID in reverse ID loop
null ; end loop ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin while 1 loop null ; end loop ;
end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin declare begin null ; end ; end ; begin null ;
end ;
procedure ID is for ID use 1 ; package
body ID is begin begin null ; exception when ID !
ID => null ; end ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin begin null ; exception when others => null ;
end ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin accept ID do null ; end ; end ; begin
null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin accept "**" ; end ; begin null ;
end ;
procedure ID is for ID use 1 ; package
body ID is begin accept ID . ID ; end ; begin
null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin accept ID . "**" ; end ;
begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin accept ID ( 1 ) ; end ;
begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select when 1 => terminate ;
end select ; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select accept ID ; end select ; end ;
begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select delay 1 ; end select ;
end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select accept ID ; null ; end select
; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is begin select terminate ; or terminate ; end select
; end ; begin null ; end ;
procedure ID is for ID use 1 ; package
body ID is separate ; begin null ; end ;
procedure ID is for ID use 1 ; task body
ID is separate ; begin null ; end ;
procedure ID is for ID use 1 ; task
ID ; pragma ID ; begin null ; end ;
procedure ID is package body ID is end ; begin null ;
end ;